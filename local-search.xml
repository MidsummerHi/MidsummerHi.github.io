<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>分部积分</title>
    <link href="/2024/01/12/%E5%88%86%E9%83%A8%E7%A7%AF%E5%88%86/"/>
    <url>/2024/01/12/%E5%88%86%E9%83%A8%E7%A7%AF%E5%88%86/</url>
    
    <content type="html"><![CDATA[<h2 id="一分部积分的基本形式">一、分部积分的基本形式</h2><p>分部积分法是微积分中的一个技巧，用于求解不定积分，特别适用于具有乘积形式的函数。分部积分法的公式表达为：<span class="math display">\[\int u\mathrm{d}v = uv - \int v  \mathrm{d}u\]</span> 其中，<span class="math inline">\(u\)</span>和 <spanclass="math inline">\(\mathrm{d}v\)</span> 是待积函数的两个部分，<spanclass="math inline">\(u\)</span>通常是一个可导函数，<spanclass="math inline">\(\mathrm{d}v\)</span>则是可积的函数。通过这个公式，可以将一个较复杂的积分问题转化为两个相对简单的积分问题。</p><p>下面总结分部积分法的步骤以及一些常见的分部积分形式：</p><h2 id="二分部积分法步骤">二、分部积分法步骤：</h2><h3 id="选择u和-mathrmdv">1.<strong>选择<spanclass="math inline">\(u\)</span>和 <spanclass="math inline">\(\mathrm{d}v\)</span> :</strong></h3><p>选择<span class="math inline">\(u\)</span>和 <spanclass="math inline">\(\mathrm{d}v\)</span> ，通常选择 <spanclass="math inline">\(u\)</span>为可导函数， <spanclass="math inline">\(\mathrm{d}v\)</span> 为可积函数。</p><h3 id="应用分部积分公式">2.<strong>应用分部积分公式：</strong></h3><p><span class="math display">\[\int u \mathrm{d}v = uv - \int v  \mathrm{d}u\]</span></p><h3 id="化简和解决">3.<strong>化简和解决：</strong></h3><p>将公式中的项进行代入，得到简化后的积分式，然后求解。需要注意的是，并不见得所有的分部积分都能一次积出结果，有可能还要将后面那一项继续应用分部积分或其他积分方法，对于复杂的积分，需要3-4次分布积分法也是有可能的。</p><h2 id="三常见的分部积分形式">三、常见的分部积分形式：</h2><h3 id="多项式与指数函数">1.<strong>多项式与指数函数：</strong></h3><p>当一个多项式函数与一个指数函数相乘时，通常选择将指数函数进行凑微分，放到微分算子的后面：<span class="math display">\[\int x^n e^x \mathrm{d}x =\int x^n \mathrm{d} e^x  =x^n e^x - \int  e^x\mathrm{d}x^{n}\]</span></p><h3 id="对数与多项式">2.<strong>对数与多项式：</strong></h3><p>当一个对数函数与一个多项式相乘时，通常选择对数函数进行凑微分，放到微分算子的后面:<span class="math display">\[\int x\ln(x) \mathrm{d}x = \int x \mathrm{d}\ln(x) =x\ln(x) - \intx\mathrm{d}\ln(x)\]</span></p><h3 id="三角函数">3.<strong>三角函数：</strong></h3><p>当一个三角函数与另一个函数相乘时，通常选择三角函数进行凑微分，放到微分算子的后面:<span class="math display">\[\int x^2\cos(x)  \mathrm{d}x =\int x^2 \mathrm{d}\sin(x)=x^2\sin(x)-\int\sin(x)\mathrm{d}x^2\]</span></p><h3 id="反三角函数">4.<strong>反三角函数：</strong></h3><p>当一个反三角函数与另一个函数相乘时，通常选择反三角函数进行凑微分，放到微分算子的后面:<span class="math display">\[\int x \arctan(x) \mathrm{d}x =\frac{1}{2}\int  \arctan(x)\mathrm{d}x^2= \frac{1}{2}x^2\arctan(x) - \frac{1}{2}\int x^2\mathrm{d}\arctan(x)\]</span>这些是一些常见的分部积分形式，但实际上分部积分法可以应用于很多其他函数组合。选择哪一个函数作为<spanclass="math inline">\(u\)</span>和<spanclass="math inline">\(v\)</span>通常需要一定的技巧和经验，完成一次分部积分后，可能需要多次应用分部积分法或结合其他的积分技巧来得到最终的结果。</p><p>然后上面是不定积分的分部积分，其实定积分也是一样的，只是给定了上下限，最后要求出一个值。</p><h2 id="四示例">四、示例</h2><p>这眼看期末了，学弟学妹们为高数的期末考试愁白了头哈哈。我看到有人对这一道题发问，我就写了一下题解。然后进一步就想到干脆做一题分部积分的教程受益大家。</p><p>题目不难，可能她上课开小差咯，这个题解放在这呢，也是让基础差的同学体会一下分部积分法的操作流程。难易程度这个程度应该对于基础不太好的刚刚好都能看懂。题目和题解都在下面：<span class="math display">\[\begin{aligned}\int y^3e^{\frac{1}{2}y^2}dy&amp;=\int y^2e^{\frac{1}{2}y^2}d{\scriptstyle{\frac{1}{2}y^2}}=\int y^2de^{\frac{1}{2}y^2}\\&amp;=y^2e^{\frac{1}{2}y^2}-\int e^{\frac{1}{2}y^2}d\scriptstyle y^2\\&amp;=y^2e^{\frac{1}{2}y^2}-2\inte^{\frac{1}{2}y^2}d\scriptstyle{\frac{1}{2}y^2}\\&amp;=y^2e^{\frac{1}{2}y^2}-2e^{\frac{1}{2}y^2}+c\\&amp;=e^{\frac{1}{2}y^2}(y^2-2)+c\end{aligned}\]</span></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一道不那么简单的证明题</title>
    <link href="/2024/01/12/%E4%B8%80%E9%81%93%E4%B8%8D%E9%82%A3%E4%B9%88%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%81%E6%98%8E%E9%A2%98/"/>
    <url>/2024/01/12/%E4%B8%80%E9%81%93%E4%B8%8D%E9%82%A3%E4%B9%88%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%81%E6%98%8E%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="题目">题目</h3><p>设<spanclass="math inline">\(f(x)\)</span>在区间[0,1]上连续可微，满足<spanclass="math inline">\(0&lt;f&#39;(x)\leq1\)</span>,任给<spanclass="math inline">\(x\in[0,1]\)</span>且<spanclass="math inline">\(f(0)=0\)</span>，试证： <spanclass="math display">\[\int_0^1\left(f\left(x\right)\right)^3\mathrm{d}x\leq\left(\int_0^1f(x)\mathrm{d}x\right)^2\]</span></p><h3 id="解答">解答</h3><p><strong>证明：</strong></p><p>由<span class="math inline">\(0&lt;f&#39;(x)\leq 1\)</span>知： <spanclass="math display">\[0&lt;\frac{f(x)-f(0)}{x-0}=f&#39;(\xi_1)\leq 1\]</span> 因此： <span class="math display">\[0&lt;f(x)\leq x\]</span> 那么 <span class="math display">\[2f(t)\cdot f&#39;(t)\leq2f(t)\]</span> 又 <span class="math display">\[\frac{f^2(x)-2\int^x_0f(t)\mathrm{d}t}{x}=2f(x)f&#39;(\xi_2)-2f(\xi_2)\leq 0\]</span> 于是有 <span class="math display">\[f^2(x)\leq 2\int^x_0f(t)\mathrm{d}t\]</span> 易得 <span class="math display">\[f^3(x)\leq2f(x)\int^x_0f(t)\mathrm{d}t\]</span> 由于 <span class="math display">\[\frac{\int^x_0f^3(t)\mathrm{d}t-\left[\int^x_0f(t)\mathrm{d}t\right]^2}{x}=f^3f(\xi_3)-2f(\xi_3)\int^x_0f(t)\mathrm{d}t\leq0\]</span> 故 <span class="math display">\[\int^x_0f^3(t)\mathrm{d}t\leq\left[\int^x_0f(t)\mathrm{d}t\right]^2,\quad \forall x\in[0,1]\]</span> 当我们取<spanclass="math inline">\(x=1\)</span>时，题目得证。</p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2024/01/12/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2024/01/12/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">from</span> torch <span class="hljs-keyword">import</span> nn<br><span class="hljs-keyword">from</span> d2l <span class="hljs-keyword">import</span> torch <span class="hljs-keyword">as</span> d2l<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Conv2d</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,kernel_size</span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br>        <span class="hljs-comment">#随机初始化卷积核的参数</span><br>        self.weight=nn.Parameter(torch.rand(kernel_size))<br>        <span class="hljs-comment">#使用1作为常数偏置</span><br>        self.bias=nn.Parameter(torch.zeros(<span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self,X</span>):<br>        <span class="hljs-comment">#返回特征图（加上偏置后的）</span><br>        <span class="hljs-keyword">return</span> corr2d(X,self.weight)+self.bias<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">corr2d</span>(<span class="hljs-params">X,K</span>):<br>    <span class="hljs-comment">#获取卷积核的大小（高和宽）</span><br>    h,w=K.shape<br>    <span class="hljs-comment">#计算输出（特征图）的形状</span><br>    Y=torch.zeros((X.shape[<span class="hljs-number">0</span>]-h+<span class="hljs-number">1</span>,X.shape[<span class="hljs-number">1</span>]-w+<span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Y.shape[<span class="hljs-number">0</span>]):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Y.shape[<span class="hljs-number">1</span>]):<br>            <span class="hljs-comment">#卷积运算，注意这里i+h和j+w都不会越界，先前已经计算好了大小</span><br>            Y[i,j]=(X[i:i+h,j:j+w]*K).<span class="hljs-built_in">sum</span>()<br>    <span class="hljs-comment">#返回特征图</span><br>    <span class="hljs-keyword">return</span> Y<br><br><br><br><span class="hljs-comment">#定义输入，假设这是一张图片的像素矩阵</span><br>X=torch.tensor([<br>    [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],<br>    [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>],<br>    [<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>]<br>])<br><span class="hljs-comment">#定义卷积核</span><br>K=torch.tensor([<br>    [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],<br>    [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>])<br><span class="hljs-comment">#输出特征图</span><br><span class="hljs-built_in">print</span>(corr2d(X,K))<br><br><span class="hljs-comment">#构造一个全白48像素的图片</span><br>X=torch.ones((<span class="hljs-number">6</span>,<span class="hljs-number">8</span>))<br><span class="hljs-comment">#将中间4列，全部置为黑色</span><br>X[:,<span class="hljs-number">2</span>:<span class="hljs-number">6</span>]=<span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(X)<br><br><span class="hljs-comment">#创建一个1x2的卷积核</span><br>K=torch.tensor([[<span class="hljs-number">1.0</span>,-<span class="hljs-number">1.0</span>]])<br><span class="hljs-comment">#计算特征图</span><br>Y=corr2d(X,K)<br><span class="hljs-built_in">print</span>(Y)<br><br><span class="hljs-comment">#测试该卷积核是否能对水平边缘进行检测</span><br><span class="hljs-built_in">print</span>(corr2d(X.t(),K))<br><br><span class="hljs-comment"># 构造一个二维卷积层，它具有1个输出通道和形状为（1，2）的卷积核</span><br>conv2d=nn.Conv2d(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,kernel_size=(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),bias=<span class="hljs-literal">False</span>)<br><br><span class="hljs-comment"># 这个二维卷积层使用四维输入和输出格式（批量大小、通道、高度、宽度），</span><br><span class="hljs-comment"># 其中批量大小和通道数都为1</span><br>X=X.reshape((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>))<br>Y=Y.reshape((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>))<br>lr=<span class="hljs-number">3e-2</span><br>epochs=<span class="hljs-number">10</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epochs):<br>    Y_hat=conv2d(X)<span class="hljs-comment">#计算特征图</span><br>    l=(Y_hat-Y)**<span class="hljs-number">2</span><span class="hljs-comment">#计算均方损失</span><br>    conv2d.zero_grad()<br>    l.<span class="hljs-built_in">sum</span>().backward()<br>    <span class="hljs-comment">#给卷积核做参数梯度下降更新</span><br>    conv2d.weight.data[:]-=lr*conv2d.weight.grad<br>    <span class="hljs-keyword">if</span>(i+<span class="hljs-number">1</span>)%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;epoch<span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span>,loss<span class="hljs-subst">&#123;l.<span class="hljs-built_in">sum</span>():<span class="hljs-number">.3</span>f&#125;</span>&#x27;</span>)<br><br><span class="hljs-comment">#打印一下我们训练后的卷积核权重张量</span><br><span class="hljs-built_in">print</span>(conv2d.weight.data.reshape((<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)))<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PS3</tag>
      
      <tag>Games</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/01/12/hello-world/"/>
    <url>/2024/01/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
